# Generated by Django 2.2.7 on 2019-12-11 09:41

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='devices',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('deviceid', models.CharField(max_length=25, unique=True, verbose_name='Device ID')),
                ('devicename', models.CharField(max_length=25, verbose_name='Device Name')),
                ('devicedescription', models.TextField(verbose_name='Description')),
                ('customerid', models.CharField(max_length=25, verbose_name='Customer ID')),
                ('insertby', models.CharField(default='None', max_length=50, verbose_name='insert by')),
                ('inserttime', models.DateTimeField(verbose_name='Inserttime')),
            ],
            options={
                'verbose_name_plural': 'Devices',
                'verbose_name': '2 - Devices',
            },
        ),
        migrations.CreateModel(
            name='devicestype',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('devicetypeid', models.CharField(max_length=25, unique=True, verbose_name='Device ID')),
                ('devicetypename', models.CharField(max_length=25, verbose_name='Device Name')),
                ('devicetypedescription', models.TextField(verbose_name='Description')),
                ('insertby', models.CharField(default='None', max_length=50, verbose_name='insert by')),
                ('inserttime', models.DateTimeField(verbose_name='Inserttime')),
            ],
            options={
                'verbose_name_plural': 'Devicetype',
                'verbose_name': '3 - Devicetype',
            },
        ),
        migrations.CreateModel(
            name='subcustomer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('customerid', models.CharField(default='None', max_length=25, verbose_name='Customer ID')),
                ('customername', models.CharField(default='None', max_length=50, verbose_name='Customer Name')),
                ('insertby', models.CharField(default='None', max_length=50, verbose_name='insert by')),
                ('inserttime', models.DateTimeField(verbose_name='Inserttime')),
            ],
            options={
                'verbose_name_plural': 'Customers',
                'verbose_name': '1 - Customer',
            },
        ),
        migrations.CreateModel(
            name='mvpdata',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('voltagel1', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage L1')),
                ('voltagel2', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage L2')),
                ('voltagel3', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage l3')),
                ('voltage12', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage 1-2')),
                ('voltage23', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage 2-3')),
                ('voltage31', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage 3-1')),
                ('currentl1', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='current L1')),
                ('currentl2', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='current L2')),
                ('currentl3', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='current L3')),
                ('cbclosecounter', models.IntegerField(default=0, verbose_name='cb close counter')),
                ('runhours', models.IntegerField(default=0, verbose_name='Runhours')),
                ('khwcount', models.IntegerField(default=0, verbose_name='kwhhours')),
                ('kvarcount', models.IntegerField(default=0, verbose_name='kvarhours')),
                ('stateerror', models.PositiveSmallIntegerField(default=0, verbose_name='state error')),
                ('statewarning', models.PositiveSmallIntegerField(default=0, verbose_name='state warning')),
                ('modeauto', models.PositiveSmallIntegerField(default=0, verbose_name='mode auto')),
                ('modeman', models.PositiveSmallIntegerField(default=0, verbose_name='mode manual')),
                ('modestop', models.PositiveSmallIntegerField(default=0, verbose_name='mode stop')),
                ('modetest', models.PositiveSmallIntegerField(default=0, verbose_name='test mode')),
                ('cb1state', models.PositiveSmallIntegerField(default=0, verbose_name='gcb state')),
                ('cb2state', models.PositiveSmallIntegerField(default=0, verbose_name='mcb state')),
                ('cb3state', models.PositiveSmallIntegerField(default=0, verbose_name='mcb state')),
                ('cb4state', models.PositiveSmallIntegerField(default=0, verbose_name='mcb state')),
                ('inserttime', models.DateTimeField(verbose_name='Inserttime')),
                ('deviceid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supervision.devices')),
            ],
            options={
                'verbose_name_plural': 'mvpdata',
                'verbose_name': '8 - mvpdata',
            },
        ),
        migrations.CreateModel(
            name='hcasdata',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('evaporationtemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='evaporation temperatur')),
                ('condensationtemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='condensation temperatur')),
                ('compressortemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='compressor temperatur')),
                ('hotgastemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='hotgas temperatur')),
                ('fluidtemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='fluid temperatur')),
                ('roomtempdevice', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='room temperatur')),
                ('devicevoltage', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='device voltage')),
                ('compressorcurrent', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='compressor current')),
                ('devicepower', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='device power')),
                ('deviceconsumption', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='device consumption')),
                ('serverroomtemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='temperatur serverroom')),
                ('serverroomhumidity', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='humidity serverroom')),
                ('runhorus', models.IntegerField(default=0, verbose_name='Runhours')),
                ('inserttime', models.DateTimeField(verbose_name='Inserttime')),
                ('deviceid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supervision.devices')),
            ],
            options={
                'verbose_name_plural': 'Hcasdata',
                'verbose_name': '5 - Hcasdata',
            },
        ),
        migrations.CreateModel(
            name='errorlog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alarmtime', models.DateTimeField(verbose_name='Insert')),
                ('alarm1', models.CharField(default=' ', max_length=25, verbose_name='Alarm Pos1')),
                ('alarm2', models.CharField(default=' ', max_length=25, verbose_name='Alarm Pos2')),
                ('alarm3', models.CharField(default=' ', max_length=25, verbose_name='Alarm Pos3')),
                ('alarm4', models.CharField(default=' ', max_length=25, verbose_name='Alarm Pos4')),
                ('alarm5', models.CharField(default=' ', max_length=25, verbose_name='Alarm Pos5')),
                ('alarmInfo', models.TextField(verbose_name='Info')),
                ('deviceid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supervision.devices')),
            ],
            options={
                'verbose_name_plural': '4 - Alarmmessage',
                'verbose_name': '4 - Alarmmessage',
            },
        ),
        migrations.CreateModel(
            name='egcdata',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('coolingtemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='cooling temp')),
                ('oiltemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='cooling temp')),
                ('oilpressure', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='cooling temp')),
                ('voltagel1', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage L1')),
                ('voltagel2', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage L2')),
                ('voltagel3', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage l3')),
                ('voltage12', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage 1-2')),
                ('voltage23', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage 2-3')),
                ('voltage31', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage 3-1')),
                ('currentl1', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='current L1')),
                ('currentl2', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='current L2')),
                ('currentl3', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='current L3')),
                ('startcounter', models.IntegerField(default=0, verbose_name='startcounter')),
                ('unsuccesstartcounter', models.IntegerField(default=0, verbose_name='unsuccessful starts')),
                ('runhours', models.IntegerField(default=0, verbose_name='Runhours')),
                ('khwcount', models.IntegerField(default=0, verbose_name='kwhhours')),
                ('kvarcount', models.IntegerField(default=0, verbose_name='kvarhours')),
                ('stateerror', models.PositiveSmallIntegerField(default=0, verbose_name='state error')),
                ('statewarning', models.PositiveSmallIntegerField(default=0, verbose_name='state warning')),
                ('staterunning', models.PositiveSmallIntegerField(default=0, verbose_name='state running')),
                ('statestop', models.PositiveSmallIntegerField(default=0, verbose_name='state stop')),
                ('modeauto', models.PositiveSmallIntegerField(default=0, verbose_name='mode auto')),
                ('modeman', models.PositiveSmallIntegerField(default=0, verbose_name='mode manual')),
                ('modestop', models.PositiveSmallIntegerField(default=0, verbose_name='mode stop')),
                ('modetest', models.PositiveSmallIntegerField(default=0, verbose_name='test mode')),
                ('gcbstate', models.PositiveSmallIntegerField(default=0, verbose_name='gcb state')),
                ('mcbstate', models.PositiveSmallIntegerField(default=0, verbose_name='mcb state')),
                ('operstate', models.PositiveSmallIntegerField(default=0, verbose_name='mcb state')),
                ('mainsfail', models.PositiveSmallIntegerField(default=0, verbose_name='mainsfailstate')),
                ('inserttime', models.DateTimeField(verbose_name='Inserttime')),
                ('deviceid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supervision.devices')),
            ],
            options={
                'verbose_name_plural': 'Emergency genset data',
                'verbose_name': '7 - Emergency genset data',
            },
        ),
        migrations.AddField(
            model_name='devices',
            name='device_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supervision.devicestype'),
        ),
        migrations.CreateModel(
            name='controlhvas',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ipaddr', models.CharField(default=' ', max_length=25, verbose_name='IP-address')),
                ('resetcmd', models.PositiveSmallIntegerField(default=0, verbose_name='requested reactive power')),
                ('requestinfo', models.TextField(verbose_name='Info')),
                ('inserttime', models.DateTimeField(verbose_name='Inserttime')),
                ('deviceid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supervision.devices')),
            ],
            options={
                'verbose_name_plural': 'controlhvas',
                'verbose_name': '10 - controlhvas',
            },
        ),
        migrations.CreateModel(
            name='controlchp',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ipaddr', models.CharField(default=' ', max_length=25, verbose_name='IP-address')),
                ('activpowerreq', models.IntegerField(default=0, verbose_name='requested power')),
                ('reactivpowerreq', models.IntegerField(default=0, verbose_name='requested reactive power')),
                ('tempreq', models.PositiveSmallIntegerField(default=0, verbose_name='requested reactive power')),
                ('resetcmd', models.PositiveSmallIntegerField(default=0, verbose_name='requested reactive power')),
                ('requestinfo', models.TextField(verbose_name='Info')),
                ('inserttime', models.DateTimeField(verbose_name='Inserttime')),
                ('deviceid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supervision.devices')),
            ],
            options={
                'verbose_name_plural': 'controlchp',
                'verbose_name': '9 - controlchp',
            },
        ),
        migrations.CreateModel(
            name='chpdata',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('hcltemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='hct temperatur')),
                ('hcctemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='hcc temperatur')),
                ('boilertoptemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='boiler temp top')),
                ('boilermidtemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='boiler temp mid')),
                ('boilerbuttemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='boiler temp but')),
                ('coolingtemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='cooling temp')),
                ('motorintemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='cooling temp')),
                ('motorouttemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='cooling temp')),
                ('wastgastemppri', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='cooling temp')),
                ('wastgastempsec', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='cooling temp')),
                ('oiltemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='cooling temp')),
                ('oilpressure', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='cooling temp')),
                ('exhaustgastemp', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='cooling temp')),
                ('voltagel1', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage L1')),
                ('voltagel2', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage L2')),
                ('voltagel3', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage l3')),
                ('voltage12', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage 1-2')),
                ('voltage23', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage 2-3')),
                ('voltage31', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='voltage 3-1')),
                ('currentl1', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='current L1')),
                ('currentl2', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='current L2')),
                ('currentl3', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='current L3')),
                ('startcounter', models.IntegerField(default=0, verbose_name='startcounter')),
                ('unsuccesstartcounter', models.IntegerField(default=0, verbose_name='unsuccessful starts')),
                ('runhours', models.IntegerField(default=0, verbose_name='Runhours')),
                ('khwcount', models.IntegerField(default=0, verbose_name='kwhhours')),
                ('kvarcount', models.IntegerField(default=0, verbose_name='kvarhours')),
                ('stateerror', models.PositiveSmallIntegerField(default=0, verbose_name='state error')),
                ('statewarning', models.PositiveSmallIntegerField(default=0, verbose_name='state warning')),
                ('staterunning', models.PositiveSmallIntegerField(default=0, verbose_name='state running')),
                ('statestop', models.PositiveSmallIntegerField(default=0, verbose_name='state stop')),
                ('modeauto', models.PositiveSmallIntegerField(default=0, verbose_name='mode auto')),
                ('modeman', models.PositiveSmallIntegerField(default=0, verbose_name='mode manual')),
                ('modestop', models.PositiveSmallIntegerField(default=0, verbose_name='mode stop')),
                ('gcbstate', models.PositiveSmallIntegerField(default=0, verbose_name='gcb state')),
                ('mcbstate', models.PositiveSmallIntegerField(default=0, verbose_name='mcb state')),
                ('modepowerderate', models.PositiveSmallIntegerField(default=0, verbose_name='power derate')),
                ('inserttime', models.DateTimeField(verbose_name='Inserttime')),
                ('deviceid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supervision.devices')),
            ],
            options={
                'verbose_name_plural': 'CHPdata',
                'verbose_name': '6 - CHPdata',
            },
        ),
    ]
